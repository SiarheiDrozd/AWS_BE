org: drozdsi
app: products
service: products
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs14.x
  profile: '489669634691_Siarhei_Drozd'
  region: 'us-east-1'
  stage: dev
  environment:
    DB_STOCK: 'stock'
    DB_PRODUCTS: 'products'
    AWS_SDK_LOAD_CONFIG: 1
  iam:
    role: arn:aws:iam::489669634691:role/dblambdaAccess

plugins:
  - serverless-auto-swagger
  - serverless-webpack
  - serverless-dynamodb-local
  - serverless-offline

custom:
  webpack:
    webpackConfig: 'webpack.config.js'
    includeModules: true
    packager: 'npm'
  autoswagger:
    title: 'string'
    apiType: 'http'
    generateSwaggerOnDeploy: true
    typefiles: []
    schemes: ['https', 'http']
    basePath: '/dev'
  dynamodb:
    # If you only want to use DynamoDB Local in some stages, declare them here
    stages:
      - dev
    start:
      docker: true
      port: 8000
      inMemory: true
      migrate: true
      seed: true
      convertEmptyValues: true
    # Uncomment only if you already have a DynamoDB running locally
    # noStart: true

functions:
  getProductsList:
    handler: handler.getProductsList
    events:
      - http:
          path: /products
          method: get
          cors: true
  getProductsById:
    handler: handler.getProductsById
    events:
      - http:
          path: /products/{productId}
          method: get
          cors: true
  createProduct:
    handler: handler.createProduct
    events:
      - http:
          path: /products
          method: post
          cors: true
          request:
            parameters:
              querystrings:
                count: false
                title: false
                description: false
                price: false
