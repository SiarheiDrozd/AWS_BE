org: drozdsi
app: aws-be
service: import-service
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  profile: '489669634691_Siarhei_Drozd'
  region: 'us-east-1'
  stage: dev
  versionFunctions: false
  environment:
    STAGE: ${self:custom.stage}
    CSV_BUCKET: ${self:custom.CSV_BUCKET}
    AWS_SDK_LOAD_CONFIG: 1
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:ListBucket"
      Resource: "arn:aws:s3:::${self:custom.CSV_BUCKET}"
    - Effect: "Allow"
      Action:
        - "s3:*"
      Resource: "arn:aws:s3:::${self:custom.CSV_BUCKET}/*"
    - Effect: Allow
      Action:
        - 'sqs:SendMessage'
        - 'sqs:ReceiveMessage'
        - 'sqs:DeleteMessage'
        - 'sqs:GetQueueAttributes'
      Resource: 'arn:aws:sqs:us-east-1:489669634691:catalogItemsQueue.fifo'

plugins:
  - serverless-auto-swagger
  - serverless-webpack
  - serverless-offline

custom:
  webpack:
    webpackConfig: 'webpack.config.js'
    includeModules: true
    packager: 'npm'
  autoswagger:
    title: 'string'
    apiType: 'http'
    generateSwaggerOnDeploy: true
    typefiles: [ ]
    schemes: [ 'https', 'http' ]
    basePath: '/dev'
  stage: ${opt:stage, self:provider.stage}
  CSV_BUCKET: ${ssm:/system/api/CSV_BUCKET}

functions:
  importProductsFile:
    handler: handler.importProductsFile
    events:
      - http:
          path: /import
          method: get
          cors: true
          request:
            parameters:
              querystrings:
                name: true
  importFileParser:
    handler: handler.importFileParser
    events:
      - s3:
          bucket: ${self:provider.environment.CSV_BUCKET}
          event: s3:ObjectCreated:*
          rules:
            - prefix: uploaded/
            - suffix: .csv
          existing: true

